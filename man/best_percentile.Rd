% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/best_percentile.R
\name{best_percentile}
\alias{best_percentile}
\title{Best Percentile}
\usage{
best_percentile(
  train_data,
  direct_label,
  fitted_model,
  mean = 0,
  sd = 1,
  nboot = 200,
  distr = "lnorm",
  param_adjust = "sdlog",
  label_convert = FALSE,
  multiplier = "snowdepth",
  indirect_label = "snowload",
  ...
)
}
\arguments{
\item{train_data}{Training data of class data.frame.}

\item{direct_label}{Response/dependent/label variable name that is
predicted by the fitted model.}

\item{fitted_model}{A fitted model from the fit_model function. A fitted
model of class "ranger" when random forest if fitted, "ksvm"
when support vector regression is fitted, and "gbm.object" when gradient
boosting machine is fitted.}

\item{mean}{Mean of the error distribution. Distribution is normal.}

\item{sd}{Standard deviation of the error distribution. Distribution
is normal.}

\item{nboot}{Number of times to bootstrap the error distribution. This is an
integer type parameter. Default is 200, which creates 200 different log
normal distribution parameters.}

\item{distr}{A character string that represent the distribution to fit for
the label/response. Default is "lnorm" for normal distribution.
See fitdistrplus::fitdist for string names for other distributions.}

\item{param_adjust}{A character string that represent the distribution
parameter that needs adjustment. Default is "sdlog" from the log normal
distribution. See fitdistrplus::fitdist for string
names for other distribution parameters.}

\item{label_convert}{Logical variable indicating that the final
response/label variable for fitting the distribution should be changed
from direct_label to the indirect_label. Default is FALSE, where the
direct_label is considered. If TRUE, the predicted values from the
fitted model must be multiplied by the "multiplier" to get the estimated
indirect_label.}

\item{multiplier}{Specify the multiplier column needed to compute the
indirect_label quantity. Default: "snowdepth".}

\item{indirect_label}{Specify the actual indirect_label column name needed
for computing the true parameter values. Default: "snowload".}

\item{...}{Other arguments to send to the distribution function
fitdistrplus::fitdist}
}
\value{
A value the represents the percentile of the bootstraps that gets the
predicted scale parameter close to the true parameter.
}
\description{
This function finds the best percentile out of the bootstraps of
scale parameters that minimizes the distance between the true and predicted
scale parameters. The bootstrap of log normal distribution parameters are
created by bootstrapping the error distribution from the fitted model and
adding it to the predict response variable.
}
\examples{
\dontrun{
if (interactive()) {
  # generate data for modelfitting
  data <- data.frame(x1 = rnorm(100), x2 = rnorm(100), y = rnorm(100))

  # fit a gradient boosting machine to data
  model <- fit_model(
    data = data, method = "gbm", label = "y",
    features = c("x1", "x2")
  )

  # find the best percentile that corrects the biasness in the distr. fitting
  best_percentile(
    train_data = data, direct_label = "y", fitted_model = model,
    label_convert = FALSE
  )
}
}
}
\seealso{
\code{\link[fitdistrplus:fitdist]{fitdistrplus::fitdist()}}, \code{\link[=fit_model]{fit_model()}} .
}
