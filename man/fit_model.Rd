% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fit_model.R
\name{fit_model}
\alias{fit_model}
\title{Fit machine learning model}
\usage{
fit_model(formula, data, method, label, features, cv_folds = 5, ...)
}
\arguments{
\item{formula}{Object of class character describing the model to fit.}

\item{data}{Training data of class data.frame.}

\item{method}{Machine learning model to fit. This is a character class type
where "rf" - random forest, "svr" - support vector regression, and
"gbm" - gradient boosting machine.}

\item{label}{Response/dependent variable, alternative interface to data with
formula approach.}

\item{features}{Predictor variables, alternative interface to data with
formula approach.}

\item{cv_folds}{A k-fold cross validation on the training data, Default: 5.
This is an integer type parameter that apply to "svr" -
support vector regression, and "gbm" - gradient boosting machine.}

\item{...}{other parameters to pass to the model fitting function
"ranger::ranger" for random forest, "kernlab::ksvm" for support vector
regression, and "gbm::gbm" for gradient boosting machine.}
}
\value{
A fitted model of class "ranger" when random forest if fitted, "ksvm"
when support vector regression is fitted, and "gbm.object" when gradient
boosting machine is fitted.
}
\description{
This function allows the user to fit a machine learning model
which include random forest, support vector regression, and gradient boosting
machine.
}
\examples{
\dontrun{
if (interactive()) {
  data <- data.frame(x1 = rnorm(100), x2 = rnorm(100), y = rnorm(100))
  model <- fit_model(
    data = data, method = "gbm", label = "y",
    features = c("x1", "x2")
  )
}
}
}
\seealso{
\code{\link[ranger]{ranger}}
\code{\link[kernlab]{ksvm}}
\code{\link[gbm]{gbm}}
}
